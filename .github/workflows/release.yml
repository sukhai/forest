name: release

on:
  push:
    branches: [ master, update-github-actions-to-create-changelog-on-webpage ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check new changelog
#        if: ${{ github.event_name == 'push' && contains(github.ref, 'master') }}
        run: |
          new_changelog_version=$(./scripts/version.sh)
          if [[ -n "$new_changelog_version" ]]; then
              changelog="$(./scripts/version.sh get_latest_changelog_content)"

              changelog="${changelog//'%'/'%25'}"
              changelog="${changelog//$'\n'/'%0A'}"
              changelog="${changelog//$'\r'/'%0D'}"
              echo "::set-output name=changelog::${changelog}"
              echo "::set-env name=body::${changelog}"
              echo ::set-env name=CREATE_RELEASE::"true"
              echo ::set-env name=NEW_TAG_NAME::"$new_changelog_version"
          fi

      - name: Create release
        if: ${{ env.CREATE_RELEASE == 'true' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG_NAME }}
          release_name: ${{ env.NEW_TAG_NAME }}
          body: ${{ steps.set_env_var.outputs.changelog }}
          draft: false
          prerelease: false

      #  - name: Deploy docs
      #    env:
      #      githubToken: ${{ secrets.GITHUBTOKEN }}
      #      USER_EMAIL: ${{ secrets.USER_EMAIL }}
      #    if: ${{ github.event_name == 'push' && contains(github.ref, 'master') }}
      #    run: |
      #      git config --global user.email "$USER_EMAIL"
      #      git config --global user.name "Forest"
      #      ./scripts/deploy_docs.sh
      #
      - name: Update project version
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        env:
          githubToken: ${{ secrets.GITHUBTOKEN }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          TAG_NAME: ${{ github.event.tag_name }}
        run: |
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "Forest"

          echo "Updating project version to $TAG_NAME"